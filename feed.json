{
    "version": "https://jsonfeed.org/version/1",
    "title": "浮生半醒",
    "subtitle": "学习日记",
    "icon": "https://nana7mij.github.io/assets/favicon.ico",
    "description": "Nanamiの笔记 & 日常",
    "home_page_url": "https://nana7mij.github.io",
    "items": [
        {
            "id": "https://nana7mij.github.io/%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA/",
            "url": "https://nana7mij.github.io/%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA/",
            "title": "初体验",
            "date_published": "2023-10-08T20:56:20.000Z",
            "content_html": "<h1 id=\"font-color39c5bbnanami-の个人博客font\"><a class=\"anchor\" href=\"#font-color39c5bbnanami-の个人博客font\">#</a> <font color=#39C5BB>Nanami の个人博客</font></h1>\n<p><strong>这里是</strong><font color=#FFC0CB size=5><strong><em>Nanami</em></strong></font><font size=3>(</font><font color=#002FA7 size=2><s><strong><em>蒋佳航</em></strong></s></font><font size=3>)</font><strong>的个人博客</strong></p>\n<p><font size = 3> BiliBili : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vMzg1MTg3MDg=\">哔哩哔哩</span></font></p>\n<p><font size = 3>2021//11/21，Nana7mi 的个人博客初次创建</font></p>\n<p>谢谢大佬们捧场 QVQ</p>\n",
            "tags": [
                "博客创建",
                "博客创建"
            ]
        },
        {
            "id": "https://nana7mij.github.io/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20/",
            "url": "https://nana7mij.github.io/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20/",
            "title": "Linux学习笔记",
            "date_published": "2023-09-28T16:00:00.000Z",
            "content_html": "<h1 id=\"linux-学习笔记\"><a class=\"anchor\" href=\"#linux-学习笔记\">#</a> Linux 学习笔记</h1>\n<p>本篇用于记录 Linux 学习过程中遇到的问题与踩过的坑</p>\n<p>2023/9/29 first commit</p>\n<p>在使用 Vscode 编写 Makefile 脚本文件时，出现如下报错</p>\n<p><img data-src=\"Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2019536d054b2f4e378e463f9124a365bd/Untitled.png\" alt=\"Untitled\" /></p>\n<p>经过一番搜查后，一般出现这个问题是因为编写命令行开头没有使用 Tab 来缩进，</p>\n<p>但是我是按照规范使用 Tab 来进行缩进的</p>\n<p><img data-src=\"Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2019536d054b2f4e378e463f9124a365bd/Untitled%201.png\" alt=\"Untitled\" /></p>\n<p>此时我百思不得其解！jsdfhnjksdgabjkgbdajgdnbgjkablgdskj</p>\n<p>但是最终我找到了解决的办法</p>\n<p>问题出现在 Vscode 的一个设置上面</p>\n<p><img data-src=\"Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2019536d054b2f4e378e463f9124a365bd/Untitled%202.png\" alt=\"Untitled\" /></p>\n<p>此设置是默认开启的，而一但开启此设置，Vscode 会将 Tab 设定为空格，例如 Tab Size = 4，那么就是等量的 4 个空格，所以在运行 make 指令的时候会出现 missing separator 报错，将次设置关闭后再次运行即可成功。</p>\n",
            "tags": [
                "汇编",
                "汇编",
                "Linux",
                "Vscode",
                "终端",
                "GDB"
            ]
        },
        {
            "id": "https://nana7mij.github.io/01-HTML%E7%AC%94%E8%AE%B0/",
            "url": "https://nana7mij.github.io/01-HTML%E7%AC%94%E8%AE%B0/",
            "title": "01-HTML笔记",
            "date_published": "2023-09-26T16:00:00.000Z",
            "content_html": "<h1 id=\"基础\"><a class=\"anchor\" href=\"#基础\">#</a> 基础</h1>\n<p>1. 一个元素的基本概念<br />\n！[[Pasted image 20230302133404.png]]</p>\n<hr />\n<h1 id=\"元数据\"><a class=\"anchor\" href=\"#元数据\">#</a> 元数据</h1>\n<p>设置页面描述<br />\n <code> &lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;</code></p>\n<hr />\n<h1 id=\"基本元素\"><a class=\"anchor\" href=\"#基本元素\">#</a> 基本元素</h1>\n<p>段落： <code>&lt;p&gt;</code></p>\n<p>标题： <code>&lt;H1&gt;~&lt;H6&gt;</code></p>\n<p>粗体： <code>&lt;i&gt;或者&lt;strong&gt;</code></p>\n<p>斜体： <code>&lt;em&gt;</code></p>\n<p>列表：</p>\n<ol>\n<li>有序 <code>&lt;ol&gt; &lt;li&gt;&lt;li&gt; &lt;/ol&gt;</code></li>\n<li>无序 <code>&lt;ul&gt;&lt;li&gt;&lt;li&gt;&lt;/ul&gt;</code></li>\n</ol>\n<p>超链接： <code>&lt;a href target&gt;link&lt;/a&gt;</code> <br />\n 锚点：src 填写一个 #ID 可以快速链接过去</p>\n<p>图片：``<img data-src=\"\" alt=\"\" />`</p>\n<p>表格：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>ID<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>用户名<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>密码<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>user<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>pas<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>输入框:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>lable</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ex<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>lable</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ex<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>?<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span> <span class=\"token attr-name\">required</span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>`</pre></td></tr></table></figure><p>选择框</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>xxx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>//这里的value 是在JavaScript中可以获得的数据</pre></td></tr></table></figure><hr />\n<h2 id=\"语义化标签\"><a class=\"anchor\" href=\"#语义化标签\">#</a> 语义化标签</h2>\n<p>可以使用不带有任何语义的 Div 框 但是在 HTML5 中 我们尽可能的使用带有语义的标签</p>\n<p>导航： <code>&lt;nav&gt;</code></p>\n<p>元素： <code>&lt;section&gt;</code>  任何元素的通用化部分</p>\n<p>头部： <code>&lt;header&gt;</code> <br />\n 页脚： <code>&lt;footer&gt;</code></p>\n<p>文章： <code>&lt;article&gt;</code></p>\n<p>次要信息 侧边栏： <code>&lt;aside&gt;</code></p>\n<p>图表： <code>&lt;figure&gt;</code> <br />\n 别人说的话： <code>&lt;blockquote&gt;</code></p>\n<h2 id=\"格式化标签\"><a class=\"anchor\" href=\"#格式化标签\">#</a> 格式化标签</h2>\n<p>版权： <code>&amp;copy;</code></p>\n<p>空格： <code>&amp;nbsp;</code></p>\n",
            "tags": [
                "前端",
                "Web前端",
                "CSS",
                "Html",
                "前端",
                "Web"
            ]
        },
        {
            "id": "https://nana7mij.github.io/02-CSS%E7%AC%94%E8%AE%B0/",
            "url": "https://nana7mij.github.io/02-CSS%E7%AC%94%E8%AE%B0/",
            "title": "02-CSS笔记",
            "date_published": "2023-09-26T16:00:00.000Z",
            "content_html": "<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><h1 id=\"css-基础\"><a class=\"anchor\" href=\"#css-基础\">#</a> CSS 基础</h1>\n<h2 id=\"1基本构成\"><a class=\"anchor\" href=\"#1基本构成\">#</a> 1. 基本构成</h2>\n<p>基于一个选择器 可以使用属性 后面跟着数值 这个可以称之为一个声明<br />\n！[[Pasted image 20230302173916.png|200]]</p>\n<h2 id=\"2三种形式\"><a class=\"anchor\" href=\"#2三种形式\">#</a> 2. 三种形式</h2>\n<ul>\n<li>内联</li>\n<li>内部</li>\n<li>外部</li>\n</ul>\n<h2 id=\"3遵循规则\"><a class=\"anchor\" href=\"#3遵循规则\">#</a> 3. 遵循规则</h2>\n<h4 id=\"1继承性\"><a class=\"anchor\" href=\"#1继承性\">#</a> 1. 继承性</h4>\n<p>1. 继承的规则很容易被覆盖 2. 主要是与文本相关的才可以继承 3. 边框不会继承</p>\n<p>使用 inherit 强制继承 例如  <code>color inherit</code></p>\n<h4 id=\"2冲突性\"><a class=\"anchor\" href=\"#2冲突性\">#</a> 2. 冲突性</h4>\n<p>![[Pasted image 20230303002933.png|200]]</p>\n<ul>\n<li>全部使用 但如果遇到冲突的声明</li>\n<li>(!important) 最高</li>\n<li>最高优先级是 ID (多个 ID 最后的得到应用)</li>\n<li>伪类选择器 优先级比类高</li>\n<li>类</li>\n<li>元素选择器</li>\n<li>通用选择器 *</li>\n</ul>\n<h2 id=\"4组合器类型\"><a class=\"anchor\" href=\"#4组合器类型\">#</a> 4. 组合器类型</h2>\n<p>1. 列表组合器：p,h1,h2,h3 {} 2. 后代选择器：footer p {}</p>\n<blockquote>\n<p>使用类选择器 + 元素选择器 优先级是 0.1.1 高于单独使用类选择器 (0.1.0)</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzMuSUQ=\">3.ID</span> 选择器：#{} (为了给未来留下预备 不要使用它)<br />\n 4.Class 选择器：.{} 5. 元素选择器 h1 {} 6. 属性选择器！[[Pasted image 20230309201852.png]]</p>\n<h2 id=\"5盒子模型\"><a class=\"anchor\" href=\"#5盒子模型\">#</a> 5. 盒子模型</h2>\n<p><strong>内容</strong>：可以是文本 图像 视频 种种<br />\n<strong>边框</strong>：仍在是在元素内部<br />\n<strong>填充</strong>：通常是不可见的空白 在内容和边框之间<br />\n (以上三个 都是<em>元素</em>的部分)<br />\n<strong> 边距</strong>：在元素本身之外 通常用来在两个元素之间 创造空间<br />\n<strong> FILL AREA</strong>：我们定义背景颜色 将占据整个元素的可见部分 包括 content padding border<br />\n![[Pasted image 20230303155123.png|300]]</p>\n<p>![[Pasted image 20230303155421.png|300]]<br />\n<strong> 最终元素宽度</strong>：left border+left padding+width+right padding+right border<br />\n<strong> 最终元素高度</strong>：top border+top padding+height+bottom padding+bottom border<br />\n<em> 空间收缩 (collapsing margins)</em>：有两个占据同一空间的 margin 时 只有一个实际可见 通常的更大的那个</p>\n<h3 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h3>\n<p><strong>简写</strong>：一个值：四边 两个值：第一个上下第二个左右 四个值：从上面开始 顺时针绕行</p>\n<p>border-collapse: 边界折叠 当相邻两个 border 想要合在一起 使用 collapse 属性</p>\n<p>当想设置一个正方形 但是设置 height 没有用时 使用 padding:60% 将他设置为父元素的 60%</p>\n<p>border-bottom：1px solid <strong>currentcolor</strong> currentcolor 属性 就会自动带上文本的颜色</p>\n<h2 id=\"关于宽度与高度\"><a class=\"anchor\" href=\"#关于宽度与高度\">#</a> 关于宽度与高度</h2>\n<ol>\n<li>默认块级元素占用与父元素一样的宽度 (详见快级元素) 高度根据元素所需自行决定</li>\n<li>如果设置了很高的高度 只是设置了 content 并且内容默认不会居中</li>\n<li>为图片设置宽度 如果在 HTML 中设置了高度 记得把高度设置为 auto</li>\n<li>使用百分比 是随父容器大小变化 伸缩窗口持续改变</li>\n<li>子元素永远不能比父元素宽</li>\n<li>width：100% 于父窗口大小 100%</li>\n<li>margin-left 与 margin-right 都<strong>设置自动</strong> 并且 div 设置数字 会呈现一个非常漂亮的页面居中</li>\n</ol>\n<h3 id=\"auto\"><a class=\"anchor\" href=\"#auto\">#</a> Auto</h3>\n<p>1. 当设置 auto 时 只根据元素需要多少 就取多少的值<br />\n 2.margin-left：auto 将自动占据左侧所有宽度 进行右对其 移动到最右边 (前提是需要在 flex 中)</p>\n<blockquote>\n<p>例 在 bird 布局中 左边的数字和右边的图标设置 auto 中间设置 fr</p>\n</blockquote>\n<h3 id=\"boder-box\"><a class=\"anchor\" href=\"#boder-box\">#</a> Boder-box</h3>\n<p>1. 这是元素布局的默认形式<br />\n在这种情况下 我们设置了 width 又设置了 margin 很可能导致一个元素被挤开 所以我们需要一个新的盒子模型<br />\n！[[Pasted image 20230304004106.png]]</p>\n<p>2. 在这种情况下 宽度从 border 的一侧 到 border 的另一侧</p>\n<p>当我们添加一些填充或者 Border 时 这将从 content 中减去<br />\n！[[Pasted image 20230304004328.png]]<br />\nbox-sizing: border-box;</p>\n<h2 id=\"6行内元素与块级元素\"><a class=\"anchor\" href=\"#6行内元素与块级元素\">#</a> 6. 行内元素与块级元素</h2>\n<p>1. 只占他们所需的空间 不会占用一行 叫做内联框 2. 标题 段落 都叫做块级元素 他们会建立换行符 (不能排在一起) 3. 盒子模型仅使用块级元素 占据父元素 <em>content</em> 的整个空间</p>\n<p>4. 对内联元素使用盒子模型</p>\n<ol>\n<li>高度 宽度 没有任何影响</li>\n<li>margin 也仅仅适用于水平层面</li>\n<li>padding 不会连带影响其他内容 (如果是块级元素 其他内容会跟随移动)![[Pasted image 20230303182611.png]]</li>\n</ol>\n<p>5.INLINE-BLOCK BOXES 块</p>\n<ul>\n<li>只占用内容所需的位置 不会换行</li>\n<li>适用于块级盒子 height width margin padding 等</li>\n</ul>\n<h2 id=\"代码-2\"><a class=\"anchor\" href=\"#代码-2\">#</a> 代码</h2>\n<p>改变为块： <code>display:block</code> <br />\n 改变为内联块： <code>display:inline-block</code> <br />\n 改变为内联元素  <code>display:inline</code></p>\n<h1 id=\"css-样式\"><a class=\"anchor\" href=\"#css-样式\">#</a> CSS 样式</h1>\n<h2 id=\"文本的样式\"><a class=\"anchor\" href=\"#文本的样式\">#</a> 文本的样式</h2>\n<p>1. 字体类型：font-family 2. 字体大小：font-size (默认为 16) 3. 字体样式：font-style (斜体) 4. 文本格式：text-transform (全部大写) 5. 对其方式：text-aligen (按照其父元素对齐) 6. 文本粗度：font-weight<br />\n7.text-decoration 设置为 none 取消下划线 8. 行高：line-height<br />\n9.letter-spacing：字母间距</p>\n<h2 id=\"列表的样式\"><a class=\"anchor\" href=\"#列表的样式\">#</a> 列表的样式</h2>\n<p>1. 列表样式 list-style (取消难看的点)</p>\n<h2 id=\"颜色理论\"><a class=\"anchor\" href=\"#颜色理论\">#</a> 颜色理论</h2>\n<h3 id=\"1rgb-图示\"><a class=\"anchor\" href=\"#1rgb-图示\">#</a> 1.RGB 图示</h3>\n<p>![[Pasted image 20230302195553.png|200]] 2. RGBA (红，绿，蓝，透明度)</p>\n<h3 id=\"2十六进制\"><a class=\"anchor\" href=\"#2十六进制\">#</a> 2. 十六进制</h3>\n<p>![[Pasted image 20230302200042.png]]<br />\n 当数字相同时 可以缩写 比如上面这个 缩写为：0ff<br />\n 黑色：#000<br />\n 白色：#FFF<br />\n 浅灰色：#EEE<br />\n 深灰色：#333</p>\n<h2 id=\"伪类\"><a class=\"anchor\" href=\"#伪类\">#</a> 伪类</h2>\n<h3 id=\"普通\"><a class=\"anchor\" href=\"#普通\">#</a> 普通</h3>\n<h4 id=\"nth-child\"><a class=\"anchor\" href=\"#nth-child\">#</a> nth-child(?)</h4>\n<p>选择其父类第几个元素</p>\n<ol>\n<li>odd：奇数</li>\n<li>even：偶数</li>\n</ol>\n<p>易错点</p>\n<ol>\n<li>article p:nth-firstchild {} 这里是选择 article 的第一个元素是 P 的情况 而不是选择 article 中第一个 P 2. 选择其父元素的第一个子元素</li>\n</ol>\n<h3 id=\"链接lvha\"><a class=\"anchor\" href=\"#链接lvha\">#</a> 链接 (LVHA)</h3>\n<p>1. 伪类：link：针对有 href 的 a 设置样式 2. 伪类：visited：展示点击过的样式 3. 伪类：hover：设置被锚定的样式 4. 伪类：active：展示点击时的样式</p>\n<p>事实上 不只是链接 每一个样式 都有 hover 并且按钮也有<br />\n伪类:hover 也是可以进行下一级选择的 比如下一级是 svg 我们可以使用 botton:hover svg {}</p>\n<h2 id=\"伪元素\"><a class=\"anchor\" href=\"#伪元素\">#</a> 伪元素</h2>\n<p>1. 首字母：：first-word 2. 首行：：first-line</p>\n<h3 id=\"兄弟选择器\"><a class=\"anchor\" href=\"#兄弟选择器\">#</a> 兄弟选择器</h3>\n<p>1.h3 + p::firstline {color:red} 所有在 h3 之后的段落第一行变红色</p>\n<h3 id=\"after-与-before\"><a class=\"anchor\" href=\"#after-与-before\">#</a> after 与 before</h3>\n<p>任何伪元素实际都是行内元素<br />\n（一个关于在 h2 标签后面创建一个小方块 现实 TOP 字样的标注）<br />\n![[Pasted image 20230303202725.png]]</p>\n<h2 id=\"按钮样式\"><a class=\"anchor\" href=\"#按钮样式\">#</a> 按钮样式</h2>\n<p>cursor：设置鼠标样式 (pointer 是手)</p>\n<p>box-shadow:inset 0 0 0 3px # fff 当想设置按钮的 hover 属性 但是这么做会布局跳跃 可以使用这个方法 向内的边境</p>\n<h2 id=\"背景样式\"><a class=\"anchor\" href=\"#背景样式\">#</a> 背景样式</h2>\n<p>background-image:url () 在 css 中设置图片<br />\n background-size：cover 覆盖屏幕</p>\n<h2 id=\"图片样式\"><a class=\"anchor\" href=\"#图片样式\">#</a> 图片样式</h2>\n<p>transform：进行变换 scale () 函数 变换大小 使用这种方法可以旋转木马</p>\n<p>lineat-gradient (to right (或者说 45 90deg 都可以),red,blue)：线性渐变 添加两个颜色 如果两个颜色相同 就是单调渐变</p>\n<p>z-index：设置图层位置</p>\n<p>filter:grayscale (1) 设置灰度 (防止某些画面 尤其是图标 争抢注意力)<br />\n filter:brightness (0) 灰度之后完全变黑<br />\n opacity: 50% 透明度 让黑色变灰</p>\n<p>overflow：当给 box 设置了圆角 但是图片没有设置的时候 使用这个属性 可以让图片随着 box 一起圆角</p>\n<p>默认图片属于 inline 样式 两个图片之间会带有烦人的空白 设置为 block 就会消失</p>\n<h2 id=\"背景图片\"><a class=\"anchor\" href=\"#背景图片\">#</a> 背景图片</h2>\n<p>1.css 使用 background-img:url () 引入背景图片<br />\n 2.backgroune-size:cover 永远覆盖 3. 使用 role=&quot;img&quot; 设置图片 使用 aria-label 来设置这个图片的属性 相当于 alt</p>\n<h2 id=\"窗口样式\"><a class=\"anchor\" href=\"#窗口样式\">#</a> 窗口样式</h2>\n<p>overflow：scroll 超过窗口部分 使用滚动条 (<em>使用这种方法可以配合 select 标签</em>)</p>\n<h2 id=\"表单样式\"><a class=\"anchor\" href=\"#表单样式\">#</a> 表单样式</h2>\n<p><strong>input 元素与 selection 元素</strong><br />\n width 设置宽度<br />\n padding 设置大小<br />\n font-size 设置字体<br />\n background：表达颜色<br />\n巧妙阴影：box-shadow: 0px 1px 2px rgba (0,0,0,0.1);<br />\n 伪元素 placeholder 修改默认颜色<br />\n color：设置输入之后文字的颜色</p>\n<p><em>焦点状态:focus</em><br />\noutline:none (这是和 border 很像的 但是在盒子模型之外)</p>\n<h2 id=\"链接样式\"><a class=\"anchor\" href=\"#链接样式\">#</a> 链接样式</h2>\n<p>当设置链接下方有一个下划线 hover 时候消失 也不能简单的设置 border 为 none 也会导致布局跳跃 这时候将颜色设置为 transparent 可以解决这个问题</p>\n<h2 id=\"封装思想\"><a class=\"anchor\" href=\"#封装思想\">#</a> 封装思想</h2>\n<p>不要直接设置 margin 当需要的时候 添加一个助手类 margin-right-sm margin-bottom-middle</p>\n<p>其次 链接 标题 Grid 都可以封装</p>\n<p>对于 grid 也是一样 建立一个.grid 然后再建立 grid-3-cols</p>\n<p><strong>Grid 封装 Margin 注意</strong></p>\n<p>一般来说 .grid 下面 要设置 margin-bottom 但是有时候 可能 grid 只有一个元素 这个时候 只要在封装下面写上 grid:last {margin-bottom:0} 这样的话 如果这个 grid 只有一个元素 那么底部边距归零</p>\n<p>也可以使用.grid:not (:last-child){margin-bottom:9.6rem} 意思是不是最后一个子元素 那么设置 margin-bottom</p>\n<h2 id=\"动画效果\"><a class=\"anchor\" href=\"#动画效果\">#</a> 动画效果</h2>\n<p>1. 设置 transition：设置 all 与 1s 将会以动画的效果 展示过度<br />\n 2.scroll-behavior: smooth; 在使用 a 设置了 id 链接后 可以平滑滚动过去 (放在 html 标签)</p>\n<h2 id=\"特殊动画效果\"><a class=\"anchor\" href=\"#特殊动画效果\">#</a> 特殊动画效果</h2>\n<h3 id=\"悬停抬升\"><a class=\"anchor\" href=\"#悬停抬升\">#</a> 悬停抬升</h3>\n<p>当设置鼠标悬停在一个购物车上 然后让他向上移动一格 使用 transform:translate (水平，-10px)<br />\n 配合 transition:all 0.4s; 会做出来一个非常美观漂亮的动画<br />\n记得把阴影调大<br />\n！[[8 1.gif|200]]</p>\n<h3 id=\"丝带\"><a class=\"anchor\" href=\"#丝带\">#</a> 丝带</h3>\n<p>![[Pasted image 20230308202729.png|200]] 1. 使用绝对定位 2. 旋转 transform: rotate (45deg);<br />\n3.overflow: hidden;</p>\n<h3 id=\"手机导航\"><a class=\"anchor\" href=\"#手机导航\">#</a> 手机导航</h3>\n<p>![[8 1.gif]]</p>\n<p>1. 有几处细节 参考 P135 过程以及代码 2. 关键：<br />\n打开时<br />\n opacity: 1; (透明度)<br />\n visibility: visible; 可见</p>\n<p>关闭时：<br />\npointerEvents: 'auto'（鼠标事件关闭）<br />\n visibility: hidden;（不可见）</p>\n<h3 id=\"hero-渐变\"><a class=\"anchor\" href=\"#hero-渐变\">#</a> Hero 渐变</h3>\n<p><strong>hero 渐变图举例</strong>：background-image:linear-gradient (rgba (0, 0, 0, 0.356), rgba (0, 0, 0, 0.486) ), url (hero.jpg)</p>\n<h3 id=\"粘性导航\"><a class=\"anchor\" href=\"#粘性导航\">#</a> 粘性导航</h3>\n<p>1. 使用 position 的 fixed 2. 设置背景颜色不透明度为 0.97 3. 设置一个 box-shadow 4. 到跳出 hero 页后 再进行滚动 使用 js</p>\n<h1 id=\"代码规范\"><a class=\"anchor\" href=\"#代码规范\">#</a> 代码规范</h1>\n<p>1.CSS 最上面写字体表 间距表 以及 MAIN GREY COLOR 2. 将 HTML 分成不同的部分 在 CSS 中使用注释表达这些部分</p>\n<h2 id=\"html-重定义\"><a class=\"anchor\" href=\"#html-重定义\">#</a> HTML 重定义</h2>\n<p>1. 重定义字体大小为 62.5%； 2. 重定义 margin padding 3. 重定义 border-box</p>\n<hr />\n<h1 id=\"额外\"><a class=\"anchor\" href=\"#额外\">#</a> 额外</h1>\n<h3 id=\"css-变量\"><a class=\"anchor\" href=\"#css-变量\">#</a> CSS 变量</h3>\n<p>![[Pasted image 20230321204520.png]]</p>\n",
            "tags": [
                "前端",
                "Web前端",
                "CSS",
                "Html",
                "前端",
                "Web"
            ]
        },
        {
            "id": "https://nana7mij.github.io/%E5%BF%83%E5%BE%97/",
            "url": "https://nana7mij.github.io/%E5%BF%83%E5%BE%97/",
            "title": "Hexo博客创建心得(前端零基础也可食用)",
            "date_published": "2023-09-25T16:00:00.000Z",
            "content_html": "<h1 id=\"font-color39c5bb前言font\"><a class=\"anchor\" href=\"#font-color39c5bb前言font\">#</a> <font color=#39C5BB>前言</font></h1>\n<ul>\n<li>本篇将会从服务器的选择与设置，到 ShokaX 主题的安装与配置，再到部署到 Github 上生成静态页面获取免费的域名进行访问 (如果你有多币种的信用卡，那么或许可以做到 0 花费)</li>\n</ul>\n<h2 id=\"font-colorffc0cb目前尚未解决的问题font\"><a class=\"anchor\" href=\"#font-colorffc0cb目前尚未解决的问题font\">#</a> <font color=#FFC0CB>目前尚未解决的问题</font></h2>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> Blog 部署到 Github 上用 <span class=\"exturl\" data-url=\"aHR0cDovL2dpdGh1Yi5pbw==\">github.io</span> 访问本站无法使用 Algolia 提供的站内搜索，考虑使用 Github Action 完成 Algolia 数据上传 (GitHub Action：Algolia Docsearch Indexer)</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> 尚未设置评论系统，shokaX 支持 twikoo (一个简洁、安全、免费的静态网站评论系统</label></li>\n</ul>\n<h1 id=\"font-color39c5bb创建时间-20211121-nanamis-blog-初次创建font\"><a class=\"anchor\" href=\"#font-color39c5bb创建时间-20211121-nanamis-blog-初次创建font\">#</a> <font color=#39C5BB>创建时间: 2021/11/21 Nanami's Blog 初次创建</font></h1>\n<style>\n  .heimu, .heimu a, a .heimu, .heimu a.new {\n    background-color: #252525;\n    color: #252525;\n    text-shadow: none;\n}\n.heimu:hover, .heimu:active,\n.heimu:hover .heimu, .heimu:active .heimu {\n    color: white !important;\n}\n.heimu:hover a, a:hover .heimu,\n.heimu:active a, a:active .heimu {\n    color: lightblue !important;\n}\n.heimu:hover .new, .heimu .new:hover, .new:hover .heimu,\n.heimu:active .new, .heimu .new:active, .new:active .heimu {\n    color: #BA0000 !important;\n}\n  </style>\n<ul>\n<li>\n<p><span  class=\"heimu\" title=\"2023/9/26重置\"><font style=\"background: white\">更新</font></span></p>\n</li>\n<li>\n<p>本站已经由 shoka 更新至 shokaX (shoka 的二次开发版本), 拥有更简化的操作，更好的长文章性能，更改了大量难以访问的 CDN 链接等等</p>\n</li>\n</ul>\n<h2 id=\"font-colorffc0cbshokax-作者-kaitakus-blogfont\"><a class=\"anchor\" href=\"#font-colorffc0cbshokax-作者-kaitakus-blogfont\">#</a> <font color=#FFC0CB>ShokaX 作者: Kaitaku's blog</font></h2>\n<div class=\"links\"><div class=\"item\" title=\"zkz098\" style=\"--block-color:#6A5ACD;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cua2FpdGFrdS54eXov\" data-background-image=\"https://raw.githubusercontent.com/Nana7mij/NanamiImg/master/img/zkz098.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cua2FpdGFrdS54eXov\">望月阁</span>\n          <p class=\"desc\">一个萌新的学习笔记</p>\n          </div></div></div>\n<h1 id=\"font-color39c5bb服务器的购买与设置font\"><a class=\"anchor\" href=\"#font-color39c5bb服务器的购买与设置font\">#</a> <font color=#39C5BB>服务器的购买与设置</font></h1>\n<ol>\n<li>服务器目前我已知的有三家可以选择：</li>\n</ol>\n<ul>\n<li>阿里云</li>\n<li>腾讯云</li>\n<li>华为云</li>\n</ul>\n<ol start=\"2\">\n<li>阿里云</li>\n</ol>\n<ul>\n<li>因为博主用的是<mark>阿里云</mark>的服务器，所以下面的步骤以<mark>阿里云</mark>服务器来做演示，但服务器操作基本相同，其他平台也可参考。</li>\n</ul>\n<ol start=\"3\">\n<li>服务器种类选择</li>\n</ol>\n<ul>\n<li><ins>轻量应用服务器</ins><br />\n这里因为服务器只用于搭建博客，所以选择轻量应用服务器已经十分够用了。<br />\n因为博主是新人用户，并且在双十一活动期间购买的价格还是很实惠的，还没购买服务器的小伙伴也可以看看这个服务器。<br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2021/11/3a53af7a099bea3f.jpg\" alt=\"\" title=\"新人专区\" /></li>\n</ul>\n<ol start=\"4\">\n<li>系统选择</li>\n</ol>\n<ul>\n<li>服务器购买时可以选择：</li>\n<li>应用镜像</li>\n<li>系统镜像</li>\n<li>自定义镜像<br />\n这里我们选择<ins>系统镜像</ins>中的<mark> Ubuntu20.04</mark></li>\n</ul>\n<h2 id=\"font-colorffc0cb部署-hexo-静态博客框架font\"><a class=\"anchor\" href=\"#font-colorffc0cb部署-hexo-静态博客框架font\">#</a> <font color=#FFC0CB>部署 Hexo 静态博客框架</font></h2>\n<ol>\n<li>在服务器控制台 (控制台在阿里云主页面右上角：<ins class=\"primary\">我的阿里云 —— 产品 —— 轻量应用服务器：控制台处进入</ins>) 右上角区域点击<mark>远程连接</mark>对服务器进行操作</li>\n<li>在输入指令之前，请先在服务器控制台左侧：<ins class=\"dot warning\">快照 —— 创建系统盘快照对服务器进行<mark>备份</mark></ins></li>\n<li>按照顺序依次输入并等待即可 (<ins class=\"primary\">第 6 行代码执行之后命令框不会有任何反应，是<mark>正常现象</mark>，继续向下输入即可</ins>)</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令行提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"# 更新软件源 $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"# 安装 npm $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">npm</span> <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"# 添加 nodejs 源 $\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://deb.nodesource.com/setup_lts.x <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-E</span> <span class=\"token function\">bash</span> -</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"# 安装 nodejs $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> nodejs <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"# 清理 npm 自带的 nodejs $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> autoremove <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"# 设置 npm 国内镜像 $\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npm.taobao.org</pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"# 全局安装 hexo-cli $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">npm</span> i hexo-cli <span class=\"token parameter variable\">-g</span></pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"# 初始化站点文件夹 $\"></td><td><pre>hexo init blog</pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"# 进入站点文件夹 $\"></td><td><pre><span class=\"token builtin class-name\">cd</span> blog</pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"# 安装模块 $\"></td><td><pre><span class=\"token function\">npm</span> i</pre></td></tr><tr><td data-num=\"11\"></td><td data-command=\"# 开始监听 HTTP 端口 $\"></td><td><pre>hexo server</pre></td></tr></table></figure><ol start=\"4\">\n<li>快捷键<span class=\"kbd red\"> Ctrl</span> + <span class=\"kbd red\">C</span> 中断 hexo server</li>\n<li>在服务器控制台左侧：<ins class=\"primary\">防火墙 —— 添加规则 ——<mark> 端口范围</mark>中填写<mark> 4000</mark> (其他选项不需要动)—— 备注随意</ins></li>\n<li>在服务器控制台左侧：<ins class=\"primary\">远程连接 ——<mark> 设置密码</mark>中设置服务器密码 ps：密码必须记住，后面使用</ins><ins class=\"wavy\"> Vscode-SSH</ins><ins class=\"primary\"> 远程操控需要用到</ins></li>\n</ol>\n<h1 id=\"font-color39c5bbvscode-ssh-远程连接服务器font\"><a class=\"anchor\" href=\"#font-color39c5bbvscode-ssh-远程连接服务器font\">#</a> <font color=#39C5BB>Vscode-SSH 远程连接服务器</font></h1>\n<h2 id=\"font-colorffc0cbvscode-下载与安装font\"><a class=\"anchor\" href=\"#font-colorffc0cbvscode-下载与安装font\">#</a> <font color=#FFC0CB>Vscode 下载与安装</font></h2>\n<ol>\n<li>进入<ins> Vscode 官网</ins>：<font size = 5><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v\">Vscode (点击跳转 Vscode 官网)</span></font>—— 点击<ins> Download for windows</ins> 即可下载</li>\n<li>选择你要安装的位置，安装选项均默认即可</li>\n<li>安装完毕后打开<ins> Vscode</ins></li>\n</ol>\n<h2 id=\"font-colorffc0cbvscode-插件安装font\"><a class=\"anchor\" href=\"#font-colorffc0cbvscode-插件安装font\">#</a> <font color=#FFC0CB>Vscode 插件安装</font></h2>\n<ol>\n<li><ins class=\"primary\">第一次打开 Vscode 会自动弹出安装中文 (简体) 语言包扩展，如果未弹出，在左侧扩展 —— 搜索栏输入<mark> Chinese</mark>—— 进入搜索结果第一个点击安装即可</ins></li>\n<li>在扩展搜索栏输入<mark> Remote SSH</mark> 进行安装</li>\n</ol>\n<h2 id=\"font-colorffc0cbssh-插件设置font\"><a class=\"anchor\" href=\"#font-colorffc0cbssh-插件设置font\">#</a> <font color=#FFC0CB>SSH 插件设置</font></h2>\n<ol>\n<li><ins class=\"primary\">安装完毕后在 Vscode 左侧点击<mark>远程资源管理器</mark> —— 在 SSH Targets 点击<mark>加号 +</mark> —— 输入<font color=#6495ED>ssh root@你的服务器公网 IP</font></ins></li>\n<li>++ 输入成功后会弹出<mark> Select SSH configuration file to update</mark>，选第一个选项即可</li>\n<li class=\"primary\">选择完毕后右下角弹出<mark> Host added</mark>，选择<mark> connect</mark> 连接 ++</li>\n<li>左侧<mark> SSH TARGETS</mark> 中会出现你的公网 IP，点击<mark> Connect to Host in New Windows</mark> (文件夹符号)，打开新窗口后选择 Linux</li>\n<li>设置完毕后上方会弹出<mark> Enter your password</mark>，输入前面设置的服务器密码后按回车即可远程连接到服务器</li>\n<li>连接成功后会出现选择文件夹，这里选择<mark> home/admin/blog</mark> 进入之前设置好的<mark> blog</mark> 文件夹</li>\n<li>最后进入左侧资源编辑器进行编辑即可</li>\n</ol>\n<h1 id=\"font-color39c5bbhexo-主题的选择与安装font\"><a class=\"anchor\" href=\"#font-color39c5bbhexo-主题的选择与安装font\">#</a> <font color=#39C5BB>Hexo 主题的选择与安装</font></h1>\n<h2 id=\"font-colorffc0cb安装-gitfont\"><a class=\"anchor\" href=\"#font-colorffc0cb安装-gitfont\">#</a> <font color=#FFC0CB>安装 Git</font></h2>\n<ol>\n<li>在<ins> Vscode</ins> (blog 文件夹下) 终端输入</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">git</span></pre></td></tr></table></figure><h2 id=\"font-colorffc0cb主题选择font\"><a class=\"anchor\" href=\"#font-colorffc0cb主题选择font\">#</a> <font color=#FFC0CB>主题选择</font></h2>\n<ol>\n<li>进入<ins> Hexo 官网</ins>：<font size = 5><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuLw==\">Hexo (点击跳转 Hexo 中文官网)</span></font>—— 点击上方<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=\">主题</span></li>\n<li>选择一款自己喜欢的且可以进入页面的主题</li>\n<li>这里博主用的主题名字是<mark> Shoka</mark>，下面操作以该主题为例。</li>\n</ol>\n<h2 id=\"font-colorffc0cb主题安装font\"><a class=\"anchor\" href=\"#font-colorffc0cb主题安装font\">#</a> <font color=#FFC0CB>主题安装</font></h2>\n<ol>\n<li>在选择的主题网站中找到主题安装相关的文章<div class=\"tab\" data-id=\"\" data-title=\"id1\">\n<p><strong>Shoka 主题作者戳下方</strong></p>\n<div class=\"links\"><div class=\"item\" title=\"zkz098\" style=\"--block-color:#6A5ACD;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cua2FpdGFrdS54eXov\" data-background-image=\"https://raw.githubusercontent.com/Nana7mij/NanamiImg/master/img/zkz098.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cua2FpdGFrdS54eXov\">望月阁</span>\n          <p class=\"desc\">一个萌新的学习笔记</p>\n          </div></div></div>\n</div>\n</li>\n</ol>\n<div class=\"tab\" data-id=\"\" data-title=\"\">\n<details class=\"primary\"><summary>QVQ</summary><div>\n<ul>\n<li>如遇主题安装和调试过程中的问题请在这篇文章下方留言，博主看到了都会一一回复</li>\n</ul>\n</div></details>\n<h1 id=\"font-color39c5bb将-hexo-部署到-githubfont\"><a class=\"anchor\" href=\"#font-color39c5bb将-hexo-部署到-githubfont\">#</a> <font color=#39C5BB>将 Hexo 部署到 GitHub</font></h1>\n<h2 id=\"font-colorffc0cb注册-github-账户font\"><a class=\"anchor\" href=\"#font-colorffc0cb注册-github-账户font\">#</a> <font color=#FFC0CB>注册 GitHub 账户</font></h2>\n<ol>\n<li>进入<ins> GitHub 官网</ins>：<font size = 5><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLw==\">GitHub (点击跳转 GitHub 官网)</span></font> <ins class=\"wavy\">(进不去网站的小伙伴请自行准备梯子)</ins></li>\n<li><ins class=\"primary\">没有 GitHub 账户的小伙伴需要先注册一个 GitHub 的账号</ins></li>\n</ol>\n<h2 id=\"font-colorffc0cb创建-github-个人仓库font\"><a class=\"anchor\" href=\"#font-colorffc0cb创建-github-个人仓库font\">#</a> <font color=#FFC0CB>创建 GitHub 个人仓库</font></h2>\n<ol>\n<li>注册完毕并成功登录后，在官网主页右上角点击头像左侧的<mark>加号 +</mark>——<mark>New repository</mark> 创建个人仓库</li>\n<li>创建一个和你<ins> GitHub 用户名相同的仓库，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS15ZnIxNmFuMTlsLmdpdGh1Yi5pbw==\">后面加.github.io</span></ins><br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2021/11/7598692ea3e41a02.jpg\" alt=\"\" title=\"博主这里已经创建过了\" /></li>\n<li>博主这里已经创建过了，点击<mark> create repository</mark> 即可</li>\n</ol>\n<h2 id=\"font-colorffc0cb生成-ssh-添加到-githubfont\"><a class=\"anchor\" href=\"#font-colorffc0cb生成-ssh-添加到-githubfont\">#</a> <font color=#FFC0CB>生成 SSH 添加到 GitHub</font></h2>\n<ol>\n<li>在终端生成 SSH 添加到 GitHub</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"# yourname是你的GitHub用户名 $\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"yourname\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"# youremail是你创建GitHub用的邮箱 $\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"youremail\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"# 检查输入是否正确 $\"></td><td><pre><span class=\"token function\">git</span> config user.name</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"# 检查输入是否正确 $\"></td><td><pre><span class=\"token function\">git</span> config user.email</pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"# 这一步弹出任何提示直接一路回车即可 $\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"youremail\"</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>输入完毕后会生成一个文件：<mark>id_rsa.pub</mark>，打开并复制其中的内容</li>\n<li>在<ins> GitHub 官网右上角点击头像</ins> —— 点击<mark> ettings</mark>—— 点击<mark> SSH and GPG keys</mark>—— 点击右上方<mark> New SSH key</mark>——Title 随意 —— 将复制好的内容填进<mark> Key</mark> 一栏中<br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2021/11/3e3d4270191cfe4a.jpg\" alt=\"\" title=\"如图\" /></li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"# 查看是否成功 $\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-T</span> git@github.com</pre></td></tr></table></figure><h2 id=\"font-colorffc0cb配置文件font\"><a class=\"anchor\" href=\"#font-colorffc0cb配置文件font\">#</a> <font color=#FFC0CB>配置文件</font></h2>\n<ol>\n<li>打开站点配置文件_config.yml，找到<mark> deploy</mark> 一栏更改为</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>deploy:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  type: git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  repo: https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  branch: master</pre></td></tr></table></figure><ol start=\"2\">\n<li><mark>repo</mark> 一栏中的网址在 GitHub 官网主页右上角 —— 点击头像 —— 点击<ins class=\"wavy\"> your profile</ins>—— 点击 <span class=\"exturl\" data-url=\"aHR0cDovL3lvdXJuYW1lLmdpdGh1Yi5pbw==\">yourname.github.io</span> 进入查看 Html 或 SSH，这里建议使用 SSH</li>\n</ol>\n<h2 id=\"font-colorffc0cb部署上传font\"><a class=\"anchor\" href=\"#font-colorffc0cb部署上传font\">#</a> <font color=#FFC0CB>部署上传</font></h2>\n<ol>\n<li>在终端输入指令安装 deploy-git</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"# 安装deploy-git部署命令 $\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>在终端输入部署指令 (这里建议备份提前备份，如果部署过程中出现错误可以回滚)</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"# 清除之前生成的东西，可以不加 $\"></td><td><pre>hexo clean</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"# 生成静态文章可以用hexo g缩写 $\"></td><td><pre>hexo generate</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"# 部署文章可以用hexo d缩写 $\"></td><td><pre>hexo deploy</pre></td></tr></table></figure><ol start=\"3\">\n<li>上传完毕后就可以在 ++<span class=\"exturl\" data-url=\"aHR0cDovL3lvdXJuYW1lLmdpdGh1Yi5pbysr\">http://yourname.github.io++</span> 这个网站看到你的博客了</li>\n</ol>\n<h1 id=\"font-color39c5bb利用-pm2-接管-hexo-进程font\"><a class=\"anchor\" href=\"#font-color39c5bb利用-pm2-接管-hexo-进程font\">#</a> <font color=#39C5BB>利用 pm2 接管 hexo 进程</font></h1>\n<h2 id=\"font-colorffc0cb安装-pm2font\"><a class=\"anchor\" href=\"#font-colorffc0cb安装-pm2font\">#</a> <font color=#FFC0CB>安装 pm2</font></h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"# 安装pm2 $\"></td><td><pre><span class=\"token function\">npm</span>  <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> pm2</pre></td></tr></table></figure><h2 id=\"font-colorffc0cb写执行脚本文件font\"><a class=\"anchor\" href=\"#font-colorffc0cb写执行脚本文件font\">#</a> <font color=#FFC0CB>写执行脚本文件</font></h2>\n<ol>\n<li>在博客根目录下建立一个<mark> hexo_run.js</mark></li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#x2F;&#x2F;run</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>const &#123; exec &#125; &#x3D; require(&#39;child_process&#39;)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>exec(&#39;hexo server&#39;,(error, stdout, stderr) &#x3D;&gt; &#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        if(error)&#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                console.log(&#39;exec error: $&#123;error&#125;&#39;)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                return</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        console.log(&#39;stdout: $&#123;stdout&#125;&#39;);</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        console.log(&#39;stderr: $&#123;stderr&#125;&#39;);</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>&#125;)</pre></td></tr></table></figure><h2 id=\"font-colorffc0cb运行脚本font\"><a class=\"anchor\" href=\"#font-colorffc0cb运行脚本font\">#</a> <font color=#FFC0CB>运行脚本</font></h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"# 运行脚本 $\"></td><td><pre>pm2 start hexo_run.js</pre></td></tr></table></figure></div>\n",
            "tags": [
                "博客创建",
                "博客创建",
                "Hexo",
                "MarkDown",
                "Aws",
                "服务器"
            ]
        }
    ]
}